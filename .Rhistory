print(LETTERS[i])
}
set.seed(2020)
#构造随机数据
df <- data.frame(y = rnorm(100,10,2),
x1 = rbeta(100,3,4),
x2 = rbeta(100,5,4),
x3 = c(rbeta(99,7,7),0),
x4 = rbeta(100,3,7))
View(df)
fits <- list()
for(i in 1:4){
fits[[i]] = lm(y~log(df[,i+1]),data = df)
}
View(fits)
fits <- list()
for(i in 1:4){
re = try({fits[[i]] = lm(y~log(df[,i+1]),data = df)},
silent = TRUE)
if(inherits(re,'try-error')) {
fits[[i]] = 'troubles here!!!'
next
}
}
View(fits)
for(i in 3){
re = try({fits[[i]] = lm(y~log(df[,i+1]),data = df)},
silent = TRUE)
if(inherits(re,'try-error')) {
fits[[i]] = 'troubles here!!!'
next
}
}
re
for(i in 1:4){
re = try({fits[[i]] = lm(y~log(df[,i+1]),data = df)},
silent = TRUE)
if(inherits(re,'try-error')) {
fits[[i]] = 'troubles here!!!'
next
}
}
fits
summary(fits[[1]])
my_fun <- function(x,y){
z = x + y
return(z)
}
View(my_fun)
my_fun(2,3)
my_fun2 <- function(x,y=5){
z = x + y
return(z)
}
my_fun2(5)
my_fun2(2,3) #覆盖默认参数
install.packages("Seurat")
library(Seurat)
install.packages('Seurat')
install.packages('Seurat')
if(!"Seurat" %in% installed.packages()){
install.packages('Seurat')
}
if(!"SingleR" %in% installed.packages()){
BiocManager::install('SingleR')
}
bioPackages <-c(
"dplyr", "patchwork",
"limma",  # 差异分析
"celldex", # 细胞类型参考数据集
"scuttle", # 对SummarizedExperiment对象进行计算
"pheatmap",
"BiocGenerics",   'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils',
"Seurat", "SingleR",
"tximport", # 读取Alevin结果到Seurat
"R.utils", "rliger", "fishpond",
"scater", "scran", "TSCAN", "slingshot",
"scRNAseq",
"AnnotationHub", "ensembldb",
"clusterProfiler", "org.Hs.eg.db",
"cowplot", "enrichplot"
)
# 批量安装
lapply( bioPackages,
function( bioPackage ){
if( ! bioPackage %in% rownames(installed.packages()) ){
CRANpackages <- available.packages()
if( bioPackage %in% rownames( CRANpackages) ){
install.packages( bioPackage, quiet = TRUE )
}else{
BiocManager::install( bioPackage, suppressUpdates = FALSE, update = FALSE, ask = FALSE)
}
}
}
)
library(limma)
library(S4Arrays)
library(DelayedArray)
library(DelayedMatrixStats)
# 批量安装
lapply( bioPackages,
function( bioPackage ){
if( ! bioPackage %in% rownames(installed.packages()) ){
CRANpackages <- available.packages()
if( bioPackage %in% rownames( CRANpackages) ){
install.packages( bioPackage, quiet = TRUE )
}else{
BiocManager::install( bioPackage, suppressUpdates = FALSE, update = FALSE, ask = FALSE)
}
}
}
)
library(celldex)
.libPaths()
install.packages("~/Downloads/Seurat_4.1.0.tar.gz", repos = NULL, type = "source")
library(Seurat)
BiocManager::install("org.Mm.eg.db")
options(BioC_mirror="https://mirrors.tuna.tsinghua.edu.cn/bioconductor")
BiocManager::install("org.Mm.eg.db")
BiocManager::install("org.Mm.eg.db")
annot <- data.frame(row = LETTERS[1:16],
molecule = c(rep(c('NC','NC+L','H2O2','H2O2+L'),4)))
View(annot)
annot <- data.frame(row = LETTERS[1:16],
group = c(rep(c('NC','NC+L','H2O2','H2O2+L'),4)))
annot1 <- data.frame(row = LETTERS[1:16],
group = c(rep(c('NC','NC+L','H2O2','H2O2+L'),4)))
annot2 <- data.frame(col = as.character(1:24),
molecule = c(rep('GAPDH',3), #分子1
rep('',3), #分子2
rep('',3), #依次...
rep('',3),
rep('',3),
rep('',3),
rep('',3), #分子7，下一行为8
rep('',3)))
View(annot2)
library(ggpubr)
BiocManager::install(version = "3.18")
BiocManager::install(version = "3.18")
BiocManager::install(version = "3.18")
library(DoubletFinder)
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder")
library(future)
BiocManager::install("glmGamPoi")
library(glmGamPoi)
setwd('~/Desktop/R_Project/scRNA/GSE122960/)')
setwd('~/Desktop/R_Project/scRNA/GSE122960/')
library(DoubletFinder)
#devtools::install_github("chris-mcginnis-ucsf/DoubletFinder")
library(Seurat)
library(dplyr)
library(future)
#BiocManager::install("glmGamPoi")
library(glmGamPoi)
plan("multisession", workers = 4) #规划多线程
options(future.globals.maxSize = 2000 * 1024^2)
home = '~/Desktop/R_Project/scRNA/GSE122960/'
setwd(home)
#####封装函数-10X#####
# name 样本名称, label 新的名字, input 矩阵路径，dim.usage 设置主成分PCA个数, gene.column 10X文件的feature里gene有几列
rm_doublet <- function(name=NULL,label=NULL,input=NULL,dim.usage=30,auto="false",gene.column="2") {
dir.create(paste0("DoulbletFinder_",label),showWarnings = FALSE)
setwd(paste0("DoulbletFinder_",label))
sink(paste0(label,"_log_doublet.txt"),type = c("output", "message"),append = TRUE, split=T)
gc()
##获取矩阵路径，这里传入的矩阵是10X的格式
inpath <- list.files(path = input,pattern = name,full.names = T)
if (length(inpath) == 0) {
stop("No valid file path found for input data.")
}
if (auto=="true") {
inpath <- paste0(inpath,"/","04.Matrix/")#这是另一种矩阵路径结构
}
print(paste0("数据读取中！"," 开始时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
EC <- Read10X_h5(inpath)
EC <- CreateSeuratObject(EC,project = label,min.features = 200)
# if (gene.column == "1") {
#   EC <- Read10X(inpath, gene.column = 1)
# } else {
#   EC <- Read10X(inpath)
# }
# print(paste0(label,"读取完成: ",ncol(EC)," 个细胞","; ",nrow(EC)," 个基因"))
# EC <- CreateSeuratObject(EC, project = label, min.features = 200)
print(paste0(label,"构建对象: ",ncol(EC)," 个细胞","; ",nrow(EC)," 个基因"))
EC$log10FeaturePerUMI <- log10(EC$nFeature_RNA) / log10(EC$nCount_RNA)
EC <- PercentageFeatureSet(EC, pattern = "^MT-",col.name = "percent_mito")
EC <- PercentageFeatureSet(EC, pattern = "^HB[ABDGMQZ]|^HB[E][^G]",col.name = "percent_hb")
EC <- subset(x = EC,
subset = nFeature_RNA >= 200 &
nCount_RNA >= 500 &
log10FeaturePerUMI >= 0.8 &
percent_mito <= 15 &
percent_hb <= 3
)
print(paste0(label,"通过过滤: ",ncol(EC)," 个细胞","; ",nrow(EC)," 个基因"))
print(paste0("数据预处理中！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
##去双胞需要先聚类，均使用默认参数即可，可以用管道符%>%写得简洁些
# EC <- NormalizeData(EC)
# EC <- FindVariableFeatures(EC, selection.method = "vst", nfeatures = 3000)
# EC <- ScaleData(EC)
EC <- SCTransform(EC,vst.flavor = "v2", verbose = T, method = "glmGamPoi",vars.to.regress = "percent_mito")
EC <- RunPCA(EC)
ElbowPlot(EC, ndims = 50)
ggplot2::ggsave(filename = paste0(label,"_ElbowPlot.pdf"), width = 9, height = 7)
EC <- RunUMAP(EC, dims = 1:dim.usage)
EC <- RunTSNE(EC, dims = 1:dim.usage)
EC <- FindNeighbors(EC, dims = 1:dim.usage) %>% FindClusters(resolution = 0.3)
print(paste0(label,"的SCT矩阵: ",ncol(EC)," 个细胞","; ",nrow(EC)," 个基因"))
print(paste0("数据预处理完成！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
sink()
p1 = DimPlot(EC, reduction = "umap",label = T)
ggplot2::ggsave(p1,filename = paste0(label,"_doublet_UMAP_res0.3.pdf"), width = 9, height = 7)
p2 = DimPlot(EC, reduction = "tsne",label = T)
ggplot2::ggsave(p2,filename = paste0(label,"_doublet_tSNE_res0.3.pdf"), width = 9, height = 7)
##DoubletFinder去双胞的标准流程，封装成一个函数
Find_doublet <- function(data){
sink(paste0(label,"_log_doublet.txt"),type = c("output", "message"),append = TRUE, split=T)
#寻找最优pK值
print(paste0("正在寻找最优pK值！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
sweep.res.list <- paramSweep_v3(data, PCs = 1:dim.usage, sct = TRUE) ##使用log标准化，sct参数设置为 sct = F（默认 ）,如使用SCT标准化方法，设置为T
sweep.stats <- summarizeSweep(sweep.res.list, GT = FALSE)
sink()
pdf(paste0(label,"_find.pK.pdf"),width=4,height=4)
bcmvn <- find.pK(sweep.stats) #可以看到最佳参数的点
dev.off()
sink(paste0(label,"_log_doublet.txt"),type = c("output", "message"),append = TRUE, split=T)
p<-as.numeric(as.vector(bcmvn[bcmvn$MeanBC==max(bcmvn$MeanBC),]$pK)) ##提取最佳pk值
# 计算双细胞比例
DoubletRate = ncol(data)*8*1e-6 #按每增加1000个细胞，双细胞比率增加千分之8来计算
print(paste0("正在估算双细胞比例！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
nExp_poi <- round(DoubletRate*ncol(data))  #nExp_poi <- round(0.05*ncol(data))
#估计同源双细胞比例，根据modelHomotypic()中的参数人为混合双细胞。这里是从seurat_clusters中来混双细胞
homotypic.prop <- modelHomotypic(data$seurat_clusters) #最好提供celltype，而不是seurat_clusters。
# 使用同源双细胞比例对计算的双细胞比例进行校正
nExp_poi.adj <- round(nExp_poi*(1-homotypic.prop))
print(paste0("估算双细胞比例：",DoubletRate,sep = " "))
print(paste0("估算双细胞数量：",nExp_poi,sep = " "))
print(paste0("估算同源双细胞比例：",homotypic.prop,sep = " "))
print(paste0("估算异源双细胞数量：",nExp_poi.adj,sep = " "))
# 使用确定好的参数鉴定doublets
print(paste0("正在运行doubletFinder鉴定doublets！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
data <-
doubletFinder_v3(
data,
PCs = 1:dim.usage,
pN = 0.25,
pK = p,
nExp = nExp_poi.adj,
reuse.pANN = FALSE,
sct = TRUE
)
print(paste0("鉴定完成！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
print(paste0("meta.data如下：",sep = " "))
print(paste0(colnames(data@meta.data)))
colnames(data@meta.data)[ncol(data@meta.data)] = "doublet_info"
sink()
return(data)
}
##调用上面写好的函数，返回的是一个Seurat对象，meta.data信息里会有双胞信息，需要自己手动删除
EC<-Find_doublet(EC)
sink(paste0(label,"_log_doublet.txt"),type = c("output", "message"),append = TRUE, split=T)
p1 = DimPlot(EC, reduction = "umap", group.by = "doublet_info")
ggplot2::ggsave(p1,filename = paste0(label,"_doublet_UMAP.pdf"), width = 9, height = 7)
p2 = DimPlot(EC, reduction = "tsne", group.by = "doublet_info")
ggplot2::ggsave(p2,filename = paste0(label,"_doublet_tSNE.pdf"), width = 9, height = 7)
EC@meta.data$library = label #顺便打上这个样本的label
##生成的Seurat对象有个问题，会在meta.data里多了很多pANN_开头的列，需要手动删除
c <- grep("pANN_",colnames(EC@meta.data))
EC@meta.data <- EC@meta.data[,-c]
##输出此样本的细胞数
print(paste0(label,"运行完成！"," 结束时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
sink()
return(EC)
}
####运行-10X####
home <- "~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/"#最后加/
for (i in c("D1",'I1','I2','D2','D3','I3','D4','I4')) {
setwd(home)
assign(i,rm_doublet(i,i,paste0(home,i)))
}
for (i in c("D1",'I1','I2','D2','D3','I3','D4','I4')) {
setwd(home)
assign(i,rm_doublet(i,i,paste0(home,i)))
}
paste0(home,i)
assign(i,rm_doublet(i,i,paste0(home,i,"/")))
paste0(home,ss,i,"/")
paste0(home,"ss",i,"/")
paste0(home,"ss","/",i,"/")
for (i in c("D1",'I1','I2','D2','D3','I3','D4','I4')) {
setwd(home)
assign(i,rm_doublet(i,i,paste0(home,ss,i,"/")))
}
assign(i,rm_doublet(i,i,paste0(home,"ss","/",i,"/")))
for (i in c("D1",'I1','I2','D2','D3','I3','D4','I4')) {
setwd(home)
assign(i,rm_doublet(i,i,paste0(home,"ss","/",i,"/")))
}
####运行-10X####
home <- "~/Desktop/R_Project/scRNA/GSE122960/NCandIPF"#最后加/
####运行-10X####
home <- "~/Desktop/R_Project/scRNA/GSE122960/NCandIPF"#最后加/
for (i in c("D1",'I1','I2','D2','D3','I3','D4','I4')) {
setwd(home)
assign(i,rm_doublet(i,i,paste0(home,"ss","/",i,"/")))
}
paste0(home,"ss","/",i,"/")
####运行-10X####
home <- "~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/"#最后加/
####运行-10X####
home <- "~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/"#最后加/
for (i in c("D1",'I1','I2','D2','D3','I3','D4','I4')) {
setwd(home)
assign(i,rm_doublet(i,i,paste0(home,"ss","/",i,"/")))
}
a <- Read10X_h5('~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/ss/D1/')
a <- Read10X_h5('~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/ss/D1/GSM3489182_Donor_01_raw_gene_bc_matrices_h5.h5')
list.files(path = ~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/ss/D1/,pattern = name,full.names = T)
list.files(path = '~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/ss/D1/',pattern = name,full.names = T)
list.files(path = '~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/ss/D1/',pattern = 'D1',full.names = T)
list.files(path = '~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/ss/D1/',pattern = 'GSM',full.names = T)
####运行-10X####
home <- "~/Desktop/R_Project/scRNA/GSE122960/NCandIPF/"#最后加/
for (i in c("D1",'I1','I2','D2','D3','I3','D4','I4')) {
setwd(home)
assign(i,rm_doublet(i,i,paste0(home,"ss","/",i,"/")))
}
#####封装函数-10X#####
# name 样本名称, label 新的名字, input 矩阵路径，dim.usage 设置主成分PCA个数, gene.column 10X文件的feature里gene有几列
rm_doublet <- function(name=NULL,label=NULL,input=NULL,dim.usage=30,auto="false",gene.column="2") {
dir.create(paste0("DoulbletFinder_",label),showWarnings = FALSE)
setwd(paste0("DoulbletFinder_",label))
sink(paste0(label,"_log_doublet.txt"),type = c("output", "message"),append = TRUE, split=T)
gc()
##获取矩阵路径，这里传入的矩阵是10X的格式
inpath <- list.files(path = input,pattern = name,full.names = T)
if (length(inpath) == 0) {
stop("No valid file path found for input data.")
}
if (auto=="true") {
inpath <- paste0(inpath,"/","04.Matrix/")#这是另一种矩阵路径结构
}
print(paste0("数据读取中！"," 开始时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
EC <- Read10X_h5(inpath)
EC <- CreateSeuratObject(EC,project = label,min.features = 200)
# if (gene.column == "1") {
#   EC <- Read10X(inpath, gene.column = 1)
# } else {
#   EC <- Read10X(inpath)
# }
# print(paste0(label,"读取完成: ",ncol(EC)," 个细胞","; ",nrow(EC)," 个基因"))
# EC <- CreateSeuratObject(EC, project = label, min.features = 200)
print(paste0(label,"构建对象: ",ncol(EC)," 个细胞","; ",nrow(EC)," 个基因"))
EC$log10FeaturePerUMI <- log10(EC$nFeature_RNA) / log10(EC$nCount_RNA)
EC <- PercentageFeatureSet(EC, pattern = "^MT-",col.name = "percent_mito")
EC <- PercentageFeatureSet(EC, pattern = "^HB[ABDGMQZ]|^HB[E][^G]",col.name = "percent_hb")
EC <- subset(x = EC,
subset = nFeature_RNA >= 200 &
nCount_RNA >= 500 &
log10FeaturePerUMI >= 0.8 &
percent_mito <= 15 &
percent_hb <= 3
)
print(paste0(label,"通过过滤: ",ncol(EC)," 个细胞","; ",nrow(EC)," 个基因"))
print(paste0("数据预处理中！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
##去双胞需要先聚类，均使用默认参数即可，可以用管道符%>%写得简洁些
# EC <- NormalizeData(EC)
# EC <- FindVariableFeatures(EC, selection.method = "vst", nfeatures = 3000)
# EC <- ScaleData(EC)
EC <- SCTransform(EC,vst.flavor = "v2", verbose = T, method = "glmGamPoi",vars.to.regress = "percent_mito")
EC <- RunPCA(EC)
ElbowPlot(EC, ndims = 50)
ggplot2::ggsave(filename = paste0(label,"_ElbowPlot.pdf"), width = 9, height = 7)
EC <- RunUMAP(EC, dims = 1:dim.usage)
EC <- RunTSNE(EC, dims = 1:dim.usage)
EC <- FindNeighbors(EC, dims = 1:dim.usage) %>% FindClusters(resolution = 0.3)
print(paste0(label,"的SCT矩阵: ",ncol(EC)," 个细胞","; ",nrow(EC)," 个基因"))
print(paste0("数据预处理完成！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
sink()
p1 = DimPlot(EC, reduction = "umap",label = T)
ggplot2::ggsave(p1,filename = paste0(label,"_doublet_UMAP_res0.3.pdf"), width = 9, height = 7)
p2 = DimPlot(EC, reduction = "tsne",label = T)
ggplot2::ggsave(p2,filename = paste0(label,"_doublet_tSNE_res0.3.pdf"), width = 9, height = 7)
##DoubletFinder去双胞的标准流程，封装成一个函数
Find_doublet <- function(data){
sink(paste0(label,"_log_doublet.txt"),type = c("output", "message"),append = TRUE, split=T)
#寻找最优pK值
print(paste0("正在寻找最优pK值！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
sweep.res.list <- paramSweep_v3(data, PCs = 1:dim.usage, sct = TRUE) ##使用log标准化，sct参数设置为 sct = F（默认 ）,如使用SCT标准化方法，设置为T
sweep.stats <- summarizeSweep(sweep.res.list, GT = FALSE)
sink()
pdf(paste0(label,"_find.pK.pdf"),width=4,height=4)
bcmvn <- find.pK(sweep.stats) #可以看到最佳参数的点
dev.off()
sink(paste0(label,"_log_doublet.txt"),type = c("output", "message"),append = TRUE, split=T)
p<-as.numeric(as.vector(bcmvn[bcmvn$MeanBC==max(bcmvn$MeanBC),]$pK)) ##提取最佳pk值
# 计算双细胞比例
DoubletRate = ncol(data)*8*1e-6 #按每增加1000个细胞，双细胞比率增加千分之8来计算
print(paste0("正在估算双细胞比例！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
nExp_poi <- round(DoubletRate*ncol(data))  #nExp_poi <- round(0.05*ncol(data))
#估计同源双细胞比例，根据modelHomotypic()中的参数人为混合双细胞。这里是从seurat_clusters中来混双细胞
homotypic.prop <- modelHomotypic(data$seurat_clusters) #最好提供celltype，而不是seurat_clusters。
# 使用同源双细胞比例对计算的双细胞比例进行校正
nExp_poi.adj <- round(nExp_poi*(1-homotypic.prop))
print(paste0("估算双细胞比例：",DoubletRate,sep = " "))
print(paste0("估算双细胞数量：",nExp_poi,sep = " "))
print(paste0("估算同源双细胞比例：",homotypic.prop,sep = " "))
print(paste0("估算异源双细胞数量：",nExp_poi.adj,sep = " "))
# 使用确定好的参数鉴定doublets
print(paste0("正在运行doubletFinder鉴定doublets！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
data <-
doubletFinder_v3(
data,
PCs = 1:dim.usage,
pN = 0.25,
pK = p,
nExp = nExp_poi.adj,
reuse.pANN = FALSE,
sct = TRUE
)
print(paste0("鉴定完成！"," 当前时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
print(paste0("meta.data如下：",sep = " "))
print(paste0(colnames(data@meta.data)))
colnames(data@meta.data)[ncol(data@meta.data)] = "doublet_info"
sink()
return(data)
}
##调用上面写好的函数，返回的是一个Seurat对象，meta.data信息里会有双胞信息，需要自己手动删除
EC<-Find_doublet(EC)
sink(paste0(label,"_log_doublet.txt"),type = c("output", "message"),append = TRUE, split=T)
p1 = DimPlot(EC, reduction = "umap", group.by = "doublet_info")
ggplot2::ggsave(p1,filename = paste0(label,"_doublet_UMAP.pdf"), width = 9, height = 7)
p2 = DimPlot(EC, reduction = "tsne", group.by = "doublet_info")
ggplot2::ggsave(p2,filename = paste0(label,"_doublet_tSNE.pdf"), width = 9, height = 7)
EC@meta.data$library = label #顺便打上这个样本的label
##生成的Seurat对象有个问题，会在meta.data里多了很多pANN_开头的列，需要手动删除
c <- grep("pANN_",colnames(EC@meta.data))
EC@meta.data <- EC@meta.data[,-c]
##输出此样本的细胞数
print(paste0(label,"运行完成！"," 结束时间:",format(Sys.time(), "%Y%m%d %X"),sep = " "))
sink()
return(EC)
}
for (i in c("D1",'I1','I2','D2','D3','I3','D4','I4')) {
setwd(home)
assign(i,rm_doublet(i,i,paste0(home,"ss","/",i,"/")))
}
library(DoubletFinder)
#devtools::install_github("chris-mcginnis-ucsf/DoubletFinder")
library(Seurat)
library(dplyr)
library(future)
#BiocManager::install("glmGamPoi")
library(glmGamPoi)
plan("multisession", workers = 4) #规划多线程
options(future.globals.maxSize = 2000 * 1024^2)
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder",ref = 'v2.0.3')
devtools::install_github("chris-mcginnis-ucsf/DoubletFinder@v2.0.3")
remotes::install_github('https://github.com/ekernf01/DoubletFinder',force = T)
install.packages("~/Downloads/RcppAnnoy_0.0.22.tgz", repos = NULL, type = .Platform$pkgType)
install.packages("~/Downloads/RcppArmadillo_0.12.6.6.1.tgz", repos = NULL, type = .Platform$pkgType)
install.packages("~/Downloads/RcppEigen_0.3.3.9.4.tgz", repos = NULL, type = .Platform$pkgType)
install.packages("~/Downloads/RcppHNSW_0.5.0.tgz", repos = NULL, type = .Platform$pkgType)
install.packages("~/Downloads/RcppTOML_0.2.2.tgz", repos = NULL, type = .Platform$pkgType)
install.packages("~/Downloads/SeuratObject_4.1.3.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/SeuratObject_4.0.1.tar.gz", repos = NULL, type = "source")
remove.packages("Rcpp")
install.packages("~/Downloads/Rcpp_1.0.8.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/Rcpp_1.0.6.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/Rcpp_1.0.12.tgz", repos = NULL, type = .Platform$pkgType)
install.packages("~/Downloads/SeuratObject_4.1.3.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/SeuratObject_4.1.3.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/SeuratObject_4.1.3.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/Seurat_4.3.0.tar.gz", repos = NULL, type = "source")
library(Seurat)
remove.packages("Rcpp")
install.packages("~/Downloads/Rcpp_1.0.8.tar.gz", repos = NULL, type = "source")
library(dplyr)
library(future)
remove.packages("Seurat")
library(SeuratObject)
install.packages("~/Downloads/Seurat_4.3.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/Seurat_4.1.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/Seurat_4.3.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/spatstat.explore_3.1-0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/spatstat.data_3.0-0.tar.gz", repos = NULL, type = "source")
install.packages(c("spatstat.data", "spatstat.geom", "spatstat.random", "spatstat.sparse", "spatstat.utils"))
install.packages("~/Downloads/spatstat.explore_3.1-0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/Seurat_4.3.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/Matrix_1.5-1.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/Seurat_4.3.0.tar.gz", repos = NULL, type = "source")
rnorm(mean = 1.013, sd = 0.06187)
rnorm(n=6,mean = 1.013, sd = 0.06187)
rnorm(n=6,mean = 1.062, sd = 0.05391)
rnorm(n=6,mean = 1.089, sd = 0.05391)
rnorm(n=6,mean = 1.179, sd = 0.06938)
rnorm(n=6,mean = 1.079, sd = 0.07938)
rnorm(n=6,mean = 1.094, sd = 0.08251)
setwd('~/Downloads/code/')
